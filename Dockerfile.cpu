# build: $ docker build -t magnum.af/cpu -f Dockerfile.cpu --build-arg user="$UID" .
# test:  $ docker run --rm -t magnum.af/cpu ./bash/runalltests.sh .
# run:   $ docker run --rm -ti magnum.af/cpu /bin/bash

FROM ubuntu:latest as builder

RUN apt update && apt install -y gnupg curl && \
    curl -sSL 'https://repo.arrayfire.com/GPG-PUB-KEY-ARRAYFIRE-2020.PUB' | apt-key add - && \
    echo "deb [arch=amd64] https://repo.arrayfire.com/ubuntu focal main" | tee /etc/apt/sources.list.d/arrayfire.list && \
    apt update && DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends \
    build-essential \
    git \
    cmake \
    gnuplot \
    libboost-program-options-dev \
    libvtk7-dev \
    libgmock-dev \
    arrayfire-cpu3-dev \
    python3-pip && \
    pip3 install arrayfire numpy

COPY . .

RUN (mkdir build && cd build && cmake .. && make -j && ctest -j && make install) && \
    rm -r build/


FROM ubuntu:latest as runtime

RUN apt update && apt install -y gnupg2 ca-certificates apt-utils software-properties-common && \
    apt-key adv --fetch-key https://repo.arrayfire.com/GPG-PUB-KEY-ARRAYFIRE-2020.PUB && \
    echo "deb [arch=amd64] https://repo.arrayfire.com/ubuntu focal main" | tee /etc/apt/sources.list.d/arrayfire.list && \
    apt update && DEBIAN_FRONTEND=noninteractive apt install -y \
    gnuplot \
    evince \
    vtk7 \
    arrayfire-cpu3-openblas \
    python3-pip && \
    pip3 install arrayfire numpy

COPY --from=builder /usr/local/lib/magnumaf.so /usr/local/lib

# Setting user from build-arg with 999 as default
ARG user=999
RUN groupadd -g $user magnum.af.user && \
    useradd -r -u $user -g magnum.af.user magnum.af.user && \
    mkdir /home/magnum.af.user && \
    chown -R magnum.af.user /home/magnum.af.user

# set non-root user
USER magnum.af.user

ENV HOME=/home/magnum.af.user/ \
    PYTHONPATH=/usr/local/lib/
