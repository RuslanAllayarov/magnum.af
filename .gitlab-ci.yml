stages:
  - build
  - test
  - deploy

variables:
  CPU_TEST_IMAGE: $CI_REGISTRY_IMAGE/cpu-dev:latest
  CUDA_TEST_IMAGE: $CI_REGISTRY_IMAGE/cuda-dev:latest
  CUDA_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

before_script:
  - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"

build_cpu:
  stage: build
  script:
    - docker pull $CPU_TEST_IMAGE || true
    - docker build -t $CPU_TEST_IMAGE -f Dockerfile.cpu .
    - docker push $CPU_TEST_IMAGE
  tags:
    - gto2 # temporary

build_gpu:
  stage: build
  script:
    - docker pull $CUDA_TEST_IMAGE || true
    - docker build -t $CUDA_TEST_IMAGE -f Dockerfile .
    - docker push $CUDA_TEST_IMAGE
  tags:
    - gpu

test_cpu:
  stage: test
  script:
    - docker pull $CPU_TEST_IMAGE
    - docker run --rm $CPU_TEST_IMAGE ./scripts/runalltests.sh
  tags:
    - gto2 # temporary

test_gpu:
  stage: test
  script:
    - docker pull $CUDA_TEST_IMAGE
    #TODO reactivate after gto fix
    #- docker run --rm -t $CUDA_TEST_IMAGE ./scripts/runalltests.sh
    - ./scripts/bash/retag_when_on_master.sh $CUDA_TEST_IMAGE $CUDA_RELEASE_IMAGE $CI_COMMIT_REF_NAME
  tags:
    - gpu

deploy_GTO:
  stage: deploy
  only:
    - master
  script:
    - docker pull $CUDA_RELEASE_IMAGE
    - docker build -t magnum.af-docu -f Dockerfile.docu .
    - scripts/bash/get_docu_from_image.sh magnum.af-docu
  tags:
    - gto2 # temporary
  artifacts:
    paths:
      - html/
      - latex/refman.pdf

deploy_GTO2:
  stage: deploy
  only:
    - master
  script:
    - docker pull $CUDA_RELEASE_IMAGE
  tags:
    - gto2
