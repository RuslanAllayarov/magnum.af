#!/bin/bash
# magnum.af runfile
# Usage:
# ./magnum.af $1=main.cpp $2=absolute/new/output/path $3=optional_GPU-number $4=optional_plotfile/path 
# Example
# ./magnum.af main.cpp $PWD/run1 0 plotfile 

# Exit on error 
set -e

n_flag='' #noscreen
verbose='false' #todo apply

print_usage() {
  printf "Usage: ..."
}

while getopts 'nv' flag; do
  case "${flag}" in
    a) a_flag='true' ;;
    n) n_flag='true' ;;
    f) files="${OPTARG}" ;;
    v) verbose='true' ;;
    *) print_usage
       exit 1 ;;
  esac
done
shift $((OPTIND-1)) # resetting counting

# Setting (input) variables
magafdir=$( dirname "${BASH_SOURCE[0]}" )/.. # path to magnum.af/
buildfile=$1
outputpath=$2
if [[ "$3" == "" ]]; then
    GPU=0
else
    GPU=$3
fi
# if given, copying plotfile in outputdir
if [[ "$buildfile" == "" ]]; then
    echo "Error: missing buildfile as first argument required, aborting..."
    exit 1
fi
# checking if other main exists in /src
$magafdir/scripts/bash/check_main.sh

# building 
cp $buildfile $magafdir/src
$magafdir/scripts/bash/build.sh $magafdir
rm $magafdir/src/$(basename $buildfile)

# moving possible old main back
$magafdir/scripts/bash/check_main_remove.sh

# creating write dir
$magafdir/scripts/bash/check_write_dir.sh $outputpath

# Printing bash command and git log in outputpath
echo "#Command called with:" >> $outputpath/simulation_info.txt
echo "$0 $@" >> $outputpath/simulation_info.txt

if (( $(git rev-parse --is-inside-work-tree) == "true" )); then
    echo "current git commit hash:" >> $outputpath/simulation_info.txt
    echo $(git rev-parse HEAD) >> $outputpath/simulation_info.txt
else
    echo "Note: current directory is no git dir, omitting git log"
fi

# copying plotfile if existing
if [[ "$4" != "" ]]; then
    cp $4 $outputpath
fi

# copying files
if [[ "$outputpath" != "" ]]; then
    cp $magafdir/bin/magnum.af-* $outputpath
    cp $buildfile $outputpath
fi

# running
if [ -e $outputpath/magnum.af-cuda ];then
    if [ "$n_flag" == "true" ];then
        echo "starting magnum.af-cuda without screen."
        export LD_LIBRARY_PATH=/usr/local/cuda-9.0/lib64:$LD_LIBRARY_PATH && export PATH=/usr/local/cuda-9.0/bin:$PATH && $outputpath/magnum.af-cuda $outputpath $GPU $5 $6 $7 $8 $9
    else
        echo "starting magnum.af-cuda in screen."
        echo "To follow cout.dat run:"
        echo "tail -f $outputpath/cout.txt"
        screen -d -S GPU$GPU -m bash -c "export LD_LIBRARY_PATH=/usr/local/cuda-9.0/lib64:$LD_LIBRARY_PATH && export PATH=/usr/local/cuda-9.0/bin:$PATH && $outputpath/magnum.af-cuda $outputpath $GPU $5 $6 $7 $8 $9 > $outputpath/cout.txt 2>&1"
        screen -ls
    fi
elif [ -e $outputpath/magnum.af-opencl ];then
    if [ "$n_flag" == "true" ];then
        echo "starting magnum.af-opencl without screen."
        $outputpath/magnum.af-opencl $outputpath $GPU $5 $6 $7 $8 $9
    else
        echo "starting magnum.af-opencl in screen."
        echo "To follow cout.dat run:"
        echo "tail -f $outputpath/cout.txt"
        screen -d -S GPU$GPU -m bash -c "$outputpath/magnum.af-opencl $outputpath $GPU $5 $6 $7 $8 $9 > $outputpath/cout.txt 2>&1"
        screen -ls
    fi
else
    if [ "$n_flag" == "true" ];then
        echo "starting magnum.af-cpu."
        $outputpath/magnum.af-cpu $outputpath $GPU $5 $6 $7 $8 $9
    else
        echo "starting magnum.af-cpu in screen."
        echo "To follow cout.dat run:"
        echo "tail -f $outputpath/cout.txt"
        screen -d -S GPU$GPU -m bash -c "$outputpath/magnum.af-cpu $outputpath $GPU $5 $6 $7 $8 $9 > $outputpath/cout.txt 2>&1"
        screen -ls
    fi
fi
