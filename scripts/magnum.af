#!/bin/bash
# magnum.af runfile
set -e

magafdir=$( dirname "${BASH_SOURCE[0]}" )/.. # path to magnum.af/
d_flag='' 
GPU='0'
inputfile=''
outputdir=''
plotfile=''
s_flag='' 
verbose='false'

print_usage() {
  printf "Usage: 
  -d  overwrite  Accepts already existing output directories and overwrites files if existing.
  -g: GPU        Expects integer number 0-n to specify the GPU to be used.
  -i: inputfile  Inputfile for magnum.af. Either a .cpp containing a main() or a .py file.
  -o: outputdir  Directory to write all output to.
  -s  screen     Starts script using the terminal multiplexer screen.
  -p: plot       Expects argument as plotting scpript and executes it in output directory.
  "
}


while getopts 'dg:i:o:p:sv' flag; do
  case "${flag}" in
    d) d_flag='true' ;;
    g) GPU="${OPTARG}" ;;
    i) inputfile="${OPTARG}" ;;
    o) outputdir="${OPTARG}" ;;
    p) plotfile="${OPTARG}" ;;
    s) s_flag='true' ;;
    v) verbose='true' ;;
    *) print_usage
       exit 1 ;;
  esac
done
shift $((OPTIND-1)) # resetting counting

if [ -z "$inputfile" ]; then
    inputfile=$1
fi
if [ -z "$outputdir" ]; then
    outputdir=$2
fi

function log () {
    if [[ "$verbose" == "true" ]]; then
        echo "$@"
    fi
}

log "$d_flag"
log "$GPU"
log "$inputfile"
log "$outputdir"
log "$plotfile"
log "$s_flag"
log "$verbose"

log "if given, copying plotfile in outputdir"
if [[ "$inputfile" == "" ]]; then
    echo "Error: missing inputfile as first argument required, aborting..."
    exit 1
fi
log "checking if other main exists in /src"
$magafdir/scripts/bash/check_main.sh $verbose

log "building"
cp $inputfile $magafdir/src
$magafdir/scripts/bash/build.sh $magafdir $verbose
rm $magafdir/src/$(basename $inputfile)

log "moving possible old main back"
$magafdir/scripts/bash/check_main_remove.sh $verbose

log "creating write dir"
if [ -z "$outputdir" ]; then
    outputdir="$PWD/output_magnumaf"
    log "no output dir found, creating $outputdir"
fi
if [ "$d_flag" == "true" ]; then
    if [ ! -e "$outputdir" ];then
        log "writing in new directory $outputdir"
        mkdir --parents $outputdir
    else
        log "writing in existing directory $outputdir"
    fi
else
    $magafdir/scripts/bash/check_write_dir.sh $outputdir $verbose
fi

log "Printing bash command and git log in outputdir"
echo "#Command called with:" >> $outputdir/simulation_info.txt
echo "$0 $@" >> $outputdir/simulation_info.txt

if (( $(git rev-parse --is-inside-work-tree) == "true" )); then
    echo "current git commit hash:" >> $outputdir/simulation_info.txt
    echo $(git rev-parse HEAD) >> $outputdir/simulation_info.txt
else
    echo "Note: current directory is no git dir, omitting git log"
fi

log "copying plotfile if existing"
if [[ -n "$plotfile" ]]; then
    cp $plotfile $outputdir
fi

log "copying files"
if [[ "$outputdir" != "" ]]; then
    cp $magafdir/bin/magnum.af-* $outputdir
    cp $inputfile $outputdir
fi

log "running magnum.af"
if [ -e $outputdir/magnum.af-cuda ];then
    if [ "$s_flag" == "true" ];then
        echo "starting magnum.af-cuda in screen."
        echo "To follow cout.dat run:"
        echo "tail -f $outputdir/cout.txt"
        screen -d -S GPU$GPU -m bash -c "export LD_LIBRARY_PATH=/usr/local/cuda-9.0/lib64:$LD_LIBRARY_PATH && export PATH=/usr/local/cuda-9.0/bin:$PATH && $outputdir/magnum.af-cuda $outputdir $GPU $5 $6 $7 $8 $9 > $outputdir/cout.txt 2>&1"
        screen -ls
    else
        echo "starting magnum.af-cuda without screen."
        export LD_LIBRARY_PATH=/usr/local/cuda-9.0/lib64:$LD_LIBRARY_PATH && export PATH=/usr/local/cuda-9.0/bin:$PATH && $outputdir/magnum.af-cuda $outputdir $GPU $5 $6 $7 $8 $9
        (cd $outputdir && if [ -n "$plotfile" ]; then ./$plotfile; fi)
    fi
elif [ -e $outputdir/magnum.af-opencl ];then
    if [ "$s_flag" == "true" ];then
        echo "starting magnum.af-opencl in screen."
        echo "To follow cout.dat run:"
        echo "tail -f $outputdir/cout.txt"
        screen -d -S GPU$GPU -m bash -c "$outputdir/magnum.af-opencl $outputdir $GPU $5 $6 $7 $8 $9 > $outputdir/cout.txt 2>&1"
        screen -ls
    else
        echo "starting magnum.af-opencl without screen."
        $outputdir/magnum.af-opencl $outputdir $GPU $5 $6 $7 $8 $9
        (cd $outputdir && if [ -n "$plotfile" ]; then ./$plotfile; fi)
    fi
else
    if [ "$s_flag" == "true" ];then
        echo "starting magnum.af-cpu in screen."
        echo "To follow cout.dat run:"
        echo "tail -f $outputdir/cout.txt"
        screen -d -S GPU$GPU -m bash -c "$outputdir/magnum.af-cpu $outputdir $GPU $5 $6 $7 $8 $9 > $outputdir/cout.txt 2>&1"
        screen -ls
    else
        echo "starting magnum.af-cpu."
        $outputdir/magnum.af-cpu $outputdir $GPU $5 $6 $7 $8 $9
        (cd $outputdir && if [ -n "$plotfile" ]; then ./$plotfile; fi)
    fi
fi
